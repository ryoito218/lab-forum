version: '3.9'

services:
  backend:
    build: ./backend
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.production
    environment:
      - ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - db

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_app
    ports:
      - "3000:3000"
    command: npm run start
    env_file:
      - ./frontend/.env.production
    environment:
      - NODE_ENV=production
  
  db:
    image: pgvector/pgvector:0.8.0-pg15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01_init_vector.sql:ro
    ports:
      - "5432:5432"

volumes:
  pgdata: